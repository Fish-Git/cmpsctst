-------------------------------------------------------------------------------
SA22-7832-08 zArchitecture Principles of Operation:

[...]

The contents of bit
positions 61-63 of the register are the compressed-
data bit number (CBN). At the beginning of the oper-
ation, the CBN designates the leftmost bit within the
leftmost byte of the compressed-data operand.

[...]

During compression when bit 47 is
zero, the operation produces indexes, called index
symbols, to compression-dictionary entries that rep-
resent character strings, and the operation then
places the index symbols in the compressed-data
operand. During compression when bit 47 is one, the
operation still produces index symbols but then trans-
lates the index symbols to other symbols, called
interchange symbols, that it then places in the com-
pressed-data operand.

[...]

During a compression operation, the end of the first
operand is considered to be reached when the num-
ber of unused bit positions remaining in the first-oper-
and location is not sufficient to contain additional
compressed data.

During an expansion operation, the end of the first-
operand location is considered to be reached when
either of the following two conditions is met: 

  1. The number of unused byte positions remaining
in the first-operand location is not sufficient to
contain all the characters that would result from
expansion of the next index symbol. 

  2. Immediately when the number of unused byte
positions is zero, that is, immediately when the
expansion of an index symbol completely fills the
first-operand location.

[...]

If the operation is ended because the end of the sec-
ond operand is reached, condition code 0 is set. If
the operation is ended because the end of the first
operand is reached, condition code 1 is set, except
that condition code 0 is set if the end of the second
operand is also reached.

[...]

(page 7-154, middle of second column):

During
compression when the first bit of compressed data
stored is not in bit position 0 of a byte, the bits in the
byte to the left of the first bit of compressed data
remain unchanged. During compression if the last
byte stored does not completely contain compressed
data, the bits in the byte to the right of the rightmost
bit of compressed data in the byte either are
unchanged or are set to zeros.

[...]

Resulting Condition Code:

  0 End of second operand reached 
  1 End of first operand reached and end of second
operand not reached 
  2-- 
  3 CPU-determined amount of data processed 


-------------------------------------------------------------------------------
SA22-7208-01 ESA/390 Data Compression:

[...]

The
operation proceeds until the end of either operand is reached or a
CPU-determined amount of data has been processed, whichever occurs first.

[...]

The operation is ended when the end of
either operand is reached or when a CPU-determined amount of data has been processed, whichever occurs first.
During a compression operation, the end of the first operand is considered to be reached when the number of unused
bit positions remaining in the first-operand location is not sufficient to contain additional compressed data. During an
expansion operation, the end of the first-operand location is considered to be reached when the number of unused byte
positions remaining in the first-operation location is not sufficient to contain all the characters that would result from
expansion of the next index symbol.

[...]

(section 1.2.1):

During compression when the first bit of compressed data stored is not in bit position 0 of a byte, the
bits in the byte to the left of the first bit of compressed data remain unchanged. During compression if the last byte
stored does not completely contain compressed data, the bits in the byte to the right of the rightmost bit of compressed
data in the byte either are unchanged or are set to zeros.

[...]

(index):

  bits to left of compressed data     1.2.1
  bits to right of compressed data    1.2.1

-------------------------------------------------------------------------------

http://publib.boulder.ibm.com/infocenter/zvm/v6r1/topic/com.ibm.zvm.v610.dmsa6/dup0054.htm


CSRYCMPS

  z/VM V6R1 CMS Macros and Functions Reference
  SC24-6168-00


                          .-DSECT=YES,-.         .-CMPSC=YES-.
  >>-+-------+--CSRYCMPS--+------------+--+---+--+-----------+---><
     '-label-'            '-DSECT=NO,--'  '-,-'  '-CMPSC=NO--'


Purpose

  Use the CSRYCMPS macro to map the compression services parameter list
  which is required to call Data Compression Services.

  The fields in the CBLOCK parameter list are filled in by the user of
  Data Compression Services. The address of the CBLOCK is passed to
  Data Compression Services through the CBLOCK parameter of the CSRCMPSC
  macro. The CSRYCMPS macro also provides equates used to map error codes
  returned by Data Compression Services.


Parameters

  Optional Parameters

  label

    is an optional assembler label for the statement.

  DSECT=

    indicates that you are about to specify whether the template produced
    will be a DSECT (dummy control section).
    
    YES
          indicates that the template will be created as a DSECT. If
          you omit the DSECT parameter altogether, then the template
          is produced as a DSECT. This is the default.
    NO
          indicates that the DSECT statement should not be generated.
  CMPSC=
  
    indicates that you are about to specify whether the template produced
    will be a DSECT (dummy control section).

    YES
          indicates that a mapping of CMPSC has been requested. This
          is the default.
    NO
          indicates that a mapping of CMPSC has not been requested.


Usage Notes

  1.  All the CMPSC_FLAGS bits should be zero, except for the CMPSC_SYMSIZE
      and CMPSC_EXPAND bits in the CMPSC_FLAG2 byte. If other bits are found
      on, unpredictable results may occur.

  2.  The following fields are generated by the CSRYCMPS macro:

      Offsets
      Hex Dec Type/Value Len  Name (Dim)  Description

      (0)   0 STRUCTURE       CMPSC       , Compression parameter block

      (0)   0 BITSTRING   4   CMPSC_FLAGS

                                          Flag bits within which only the
                                          SymSize and Expand fields should
                                          be set. All other fields must be 0.

      (0)   0 BITSTRING   1   CMPSC_FLAGS_BYTE0

                                          Byte 0 of flags

      (1)   1 BITSTRING   1   CMPSC_FLAGS_BYTE1

                                          Byte 1 of flags

      (2)   2 BITSTRING   1   CMPSC_FLAGS_BYTE2

                                          Byte 2 of flags

              1111  ....      CMPSC_SYMSIZE

                                          X'F0' When 8 is added, indicates
                                          size in bits of a compressed entry.
                                          Must be 1-5. You can use the
                                          assembler CMPSC_SYMSIZE equate to
                                          define a value that you can use to
                                          clear the field prior to use. You
                                          can use the assembler equates
                                          CMPSC_SYMSIZE_n to set the field

              ....  ...1      CMPSC_EXPAND

                                          X'01' If on, do an expand operation.
                                          Otherwise compress.

      (3)   3 BITSTRING   1   CMPSC_FLAGS_BYTE3

                                          Byte 3 of flags

      (4)   4 ADDRESS     4   CMPSC_DICTADDR

                                          Address of the dictionary for the
                                          compress/expand function on a page
                                          boundary. Low order 12 bits of the
                                          field are treated as 0s when forming
                                          the address. Low order 3 bits contain
                                          a bit number.

      (4)   4 BITSTRING   3
      (7)   7 BITSTRING   1   CMPSC_DICTADDR_BYTE3

              ....  .111      CMPSC_BITNUM

                                          X'07' If compressing, place the first
                                          compression symbol at this bit in the
                                          leftmost byte. If expanding, expand
                                          beginning with the compression symbol
                                          that begins with this bit in the left-
                                          most byte. Normally, this bit should
                                          be set to 0 for the start of
                                          compression. For expansion, it should
                                          be set to the same value used for the
                                          start of compression. Upon completion
                                          of the operation, the value is set to
                                          the bit number of the bit following
                                          the last bit of compressed data.

      (8)   8 ADDRESS     4   CMPSC_TARGETADDR

                                          Address of area to which
                                          compression//expansion is to be done.
                                          Upon completion of the request, this
                                          address has been increased by the
                                          number of bytes processed.

      (C)   12 SIGNED     4   CMPSC_TARGETLEN

                                          Length of area to which
                                          compression/expansion is to be done.
                                          Upon completion of the request, this
                                          length has been decreased by the
                                          number of bytes processed.

      (10)  16 ADDRESS    4   CMPSC_SOURCEADDR

                                          Address of area from which
                                          compression/expansion is to be done.
                                          Upon completion of the request, this
                                          address has been increased by the
                                          number of bytes processed.

      (14)  20 SIGNED     4   CMPSC_SOURCELEN

                                          Length of area from which
                                          compression/expansion is to be done.
                                          For expansion, the length should be
                                          the difference between the TargetLen
                                          at completion of compression and the
                                          TargetLen at start of compression,
                                          incremented by 1 if field
                                          CMPSC_BITNUM was non-zero upon
                                          completion of compression. Upon
                                          completion of the request, this length
                                          has been decreased by the number of
                                          bytes processed.

      (18)  24 SIGNED     4   CMPSC_TARGETALET

                                          The ALET of the space in which the
                                          target area resides. Should be 0 for
                                          primary ASC mode callers.

      (1C)  28 SIGNED     4   CMPSC_SOURCEALET

                                          The ALET of the space in which the
                                          source area resides. Also the ALET
                                          of the space in which the dictionary
                                          resides. Should be 0 for primary
                                          addressing mode callers.

      (20)  32 ADDRESS    4   CMPSC_WORKAREAADDR

                                          Address of a 192-byte work area for
                                          use by the compression service. This
                                          area does not need to be provided if
                                          you have verified, by checking that
                                          bit CVTCMPSH is on, that the hardware
                                          CMPSC instruction is present. This
                                          work area should begin on a
                                          doubleword boundary.

-------------------------------------------------------------------------------
